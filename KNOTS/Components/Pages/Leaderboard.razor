@page "/leaderboard"
@using KNOTS.Services
@inject UserService UserService
@rendermode InteractiveServer

<PageTitle>Leaderboard</PageTitle>

<div class="container mt-4">
    <h2>Top Knotters</h2>
    <p class="text-muted">Rankings based on best matches and compatibility scores</p>

    @if (leaderboard != null && leaderboard.Any())
    {
        <div class="table-responsive">
            <table class="table table-striped table-hover">
                <thead class="table-dark">
                    <tr>
                        <th>Rank</th>
                        <th>Username</th>
                        <th>Games Played</th>
                        <th>Best Matches</th>
                        <th>Avg Compatibility</th>
                        <th>Member Since</th>
                    </tr>
                </thead>
                <tbody>
                    @{
                        int rank = 1;
                    }
                    @foreach (var user in leaderboard)
                    {
                        <tr class="@(user.Username == UserService.CurrentUser ? "table-primary" : "")">
                            <td>
                                @if (rank == 1)
                                {
                                    <span class="badge bg-warning text-dark">🥇 @rank</span>
                                }
                                else if (rank == 2)
                                {
                                    <span class="badge bg-secondary">🥈 @rank</span>
                                }
                                else if (rank == 3)
                                {
                                    <span class="badge" style="background-color: #cd7f32">🥉 @rank</span>
                                }
                                else
                                {
                                    <span>@rank</span>
                                }
                            </td>
                            <td>
                                <strong>@user.Username</strong>
                                @if (user.Username == UserService.CurrentUser)
                                {
                                    <span class="badge bg-info ms-2">You</span>
                                }
                            </td>
                            <td>@user.TotalGamesPlayed</td>
                            <td>
                                <span class="badge bg-success">@user.BestMatchesCount</span>
                            </td>
                            <td>@user.AverageCompatibilityScore.ToString("F1")%</td>
                            <td>@user.CreatedAt.ToString("MMM dd, yyyy")</td>
                        </tr>
                        rank++;
                    }
                </tbody>
            </table>
        </div>

        @if (UserService.IsAuthenticated && currentUserRank > 0)
        {
            <div class="alert alert-info mt-3">
                <strong>Your Rank:</strong> #@currentUserRank out of @UserService.GetTotalUsersCount() players
            </div>
        }
    }
    else
    {
        <div class="alert alert-warning">
            <p>No players have completed games yet. Be the first to play!</p>
        </div>
    }
    
    <div class="mt-3">
        <a href="/home" class="btn btn-secondary">Back to Home</a>
    </div>
</div>

@code {
    private List<KNOTS.Services.User> leaderboard = new();  // Full namespace
    private int currentUserRank = 0;

    protected override void OnParametersSet()
    {
        LoadLeaderboard();
    }

    private void LoadLeaderboard()
    {
        try
        {
            leaderboard = UserService.GetLeaderboard(10);
        
            if (UserService.IsAuthenticated && !string.IsNullOrEmpty(UserService.CurrentUser))
            {
                currentUserRank = UserService.GetUserRank(UserService.CurrentUser);
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading leaderboard: {ex.Message}");
            leaderboard = new List<KNOTS.Services.User>();
        }
    }
}