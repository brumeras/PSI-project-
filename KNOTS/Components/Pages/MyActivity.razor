@page "/activity"
@attribute [StreamRendering]

<PageTitle>My Activity</PageTitle>

<h1>My Activity</h1>

<p>Recent game results</p>

@if (gameResults == null)
{
    <p>
        <em>Loading...</em>
    </p>
}
else
{
    <table class="table">
        <thead>
        <tr>
            <th>Date</th>
            <th>Most compatible</th>
            <th>Least compatible</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var result in gameResults)
        {
            <tr>
                <td>@result.Date.ToString("yyyy-MM-dd")</td>
                <td>@result.MostCompatible</td>
                <td>@result.LeastCompatible</td>
            </tr>
        }
        </tbody>
    </table>
}

@code {
    private GameResult[]? gameResults;

    protected override async Task OnInitializedAsync()
    {
        
        var startDate = DateOnly.FromDateTime(DateTime.Now);
        
        // Sample game results data
        gameResults = Enumerable.Range(1, 5).Select(index => new GameResult
        {
            Date = startDate.AddDays(-index), // Show recent results (past dates)
            MostCompatible = GetRandomCompatibility(),
            LeastCompatible = GetRandomCompatibility()
        }).ToArray();
    }
    // simuliacijai, ateity nereiks:
    private string GetRandomCompatibility()
    {
        var compatibilities = new[] { "Player A", "Player B", "Player C", "Player D", "Team Alpha", "Team Beta", "User123", "Gamer456" };
        return compatibilities[Random.Shared.Next(compatibilities.Length)];
    }

  
    private class GameResult
    {
        public DateOnly Date { get; set; }
        public string? MostCompatible { get; set; }
        public string? LeastCompatible { get; set; }
    }
}