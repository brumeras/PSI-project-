@page "/"
@using KNOTS.Services
@using KNOTS.Components.Layout
@layout EmptyLayout
@rendermode InteractiveServer

<div class="login-container">
    <div class="login-card">
        @if (UserService.IsAuthenticated)
        {
            <h3 class="text-center mb-3">Welcome, @UserService.CurrentUser!</h3>
            <button class="btn-logout-full" @onclick="Logout">Logout</button>
        }
        else
        {
            <h1 class="login-title">KNOTS</h1>

            <div class="input-group">
                <label for="usernameInput">Username</label>
                <input id="usernameInput" class="form-input" @bind="Username" placeholder="Enter your username"/>
            </div>

            <div class="input-group">
                <label for="passwordInput">Password</label>
                <input id="passwordInput" type="password" class="form-input" @bind="Password" placeholder="Enter your password"/>
            </div>

            <div class="button-group">
                <button class="btn-login" @onclick="LoginToWeb">
                    Login
                </button>
                <button class="btn-signup" @onclick="RegisterToWeb">
                    Sign up
                </button>
            </div>

            @if (!string.IsNullOrEmpty(statusMessage))
            {
                <p class="status-message">@statusMessage</p>
            }
        }
    </div>
</div>

<style>
    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
    }

    .login-container {
        min-height: 100vh;
        width: 100vw;
        display: flex;
        justify-content: center;
        align-items: center;
        
        background: url('/images/rope_heart.png') no-repeat center center fixed;
        background-size: cover;
        background-color: #b4d0ec;
        
        padding: 2rem;
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }



    .login-card {
        background: rgb(248, 242, 242);
        padding: 3rem 2.5rem;
        border-radius: 20px;
        box-shadow: 0 10px 40px rgba(0, 0, 0, 0.2);
        width: 80%;
        max-width: 400px;
        backdrop-filter: blur(10px);
    }

    .login-title {
        text-align: center;
        font-size: 2.5rem;
        font-weight: bold;
        color: #f888e9;
        margin-bottom: 2rem;
        letter-spacing: 3px;
    }

    .input-group {
        margin-bottom: 1.5rem;
    }

    .input-group label {
        display: block;
        color: #333;
        font-weight: 600;
        margin-bottom: 0.5rem;
        font-size: 1rem;
    }

    .form-input {
        width: 100%;
        padding: 0.875rem 1rem;
        border: 2px solid #e0e0e0;
        border-radius: 10px;
        font-size: 1rem;
        transition: all 0.3s ease;
        background: white;
    }

    .form-input:focus {
        outline: none;
        border-color: #f888e9;
        box-shadow: 0 0 0 3px rgba(248, 136, 233, 0.1);
    }

    .form-input::placeholder {
        color: #999;
    }

    .button-group {
        display: flex;
        gap: 1rem;
        margin-top: 2rem;
    }

    .btn-login, .btn-signup {
        flex: 1;
        padding: 1rem;
        border: none;
        border-radius: 10px;
        font-weight: bold;
        font-size: 1rem;
        cursor: pointer;
        transition: all 0.3s ease;
        color: white;
    }

    .btn-login {
        background: linear-gradient(135deg, #f888e9 0%, #f56ec8 100%);
        box-shadow: 0 4px 12px rgba(248, 136, 233, 0.4);
    }

    .btn-login:hover {
        transform: translateY(-2px);
        box-shadow: 0 6px 16px rgba(248, 136, 233, 0.6);
    }

    .btn-signup {
        background: linear-gradient(135deg, #bd87f8 0%, #9d6ce8 100%);
        box-shadow: 0 4px 12px rgba(189, 135, 248, 0.4);
    }

    .btn-signup:hover {
        transform: translateY(-2px);
        box-shadow: 0 6px 16px rgba(189, 135, 248, 0.6);
    }

    .btn-login:active, .btn-signup:active {
        transform: translateY(0);
    }

    .btn-logout-full {
        width: 100%;
        padding: 1rem;
        background-color: #666;
        color: white;
        border: none;
        border-radius: 10px;
        font-weight: bold;
        font-size: 1rem;
        cursor: pointer;
        transition: all 0.3s ease;
    }

    .btn-logout-full:hover {
        background-color: #555;
        transform: translateY(-2px);
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
    }

    .status-message {
        text-align: center;
        margin-top: 1.5rem;
        color: #666;
        font-weight: 600;
        padding: 0.75rem;
        background: rgba(248, 136, 233, 0.1);
        border-radius: 8px;
    }

    @@media (max-width: 500px) {
        .login-card {
            padding: 2rem 1.5rem;
        }

        .login-title {
            font-size: 2rem;
        }

        .button-group {
            flex-direction: column;
        }
    }
</style>

@code {
    private string Username = string.Empty;
    private string Password = string.Empty;
    private string statusMessage = string.Empty;

    [Inject] private UserService UserService { get; set; }
    [Inject] private NavigationManager NavigationManager { get; set; }

    private void LoginToWeb()
    {
        var result = UserService.LoginUser(Username, Password);
        statusMessage = result.Message;

        if (result.Success)
        {
            NavigationManager.NavigateTo("/Home");
        }
    }

    private void RegisterToWeb()
    {
        var result = UserService.RegisterUser(Username, Password);
        statusMessage = result.Message;

        if (result.Success)
        {
            UserService.LoginUser(Username, Password);
            NavigationManager.NavigateTo("/Home");
        }
    }

    private void Logout()
    {
        UserService.LogoutUser();
        statusMessage = "You have logged out.";
    }
}